
# Example configuration entry
time:
  - platform: homeassistant
    id: homeassistant_time


# Example configuration entry
light:
  - platform: neopixelbus
    type: GRB
    variant: ws2812
    pin: D1
    num_leds: 61
    name: "NeoPixel Light"
    id: led_strip
    effects:
      - addressable_lambda:
          name: "Clock"
          update_interval: 1000ms
          lambda: |-
            static const std::map<int, std::map<char, std::vector<int>>> char_map = {
                {0, {
                        {'0', {14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27}},
                        {'1', {14, 15, 16, 17}},
                        {'2', {16, 17, 18, 19, 22, 23, 24, 25, 26, 27}},
                        {'3', {14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27}},
                        {'4', {14, 15, 16, 17, 22, 23, 26, 27}},
                        {'5', {14, 15, 20, 21, 22, 23, 26, 27}},
                        {'6', {14, 15, 20, 21, 22, 23, 24, 25, 26, 27}},
                        {'7', {14, 15, 16, 17, 18, 19}},
                        {'8', {14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27}},
                        {'9', {14, 15, 16, 17, 18, 19, 20, 21, 22, 23}}
                    }
                },
                {1, {
                        {'0', {2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 28, 29}},
                        {'1', {2, 3, 10, 11}},
                        {'2', {2, 3, 4, 5, 8, 9, 12, 13, 28, 29}},
                        {'3', {2, 3, 4, 5, 8, 9, 10, 11, 28, 29}},
                        {'4', {2, 3, 6, 7, 8, 9, 10, 11, 28, 29}},
                        {'5', {4, 5, 6, 7, 8, 9, 10, 11, 28, 29}},
                        {'6', {6, 7, 8, 9, 10, 11, 12, 13, 28, 29}},
                        {'7', {2, 3, 4, 5, 10, 11}},
                        {'8', {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 28, 29}},
                        {'9', {2, 3, 4, 5, 6, 7, 8, 9, 10, 11}}
                    }
                },
                {2, {
                        {'0', {32, 33, 34, 35, 36, 37, 52, 53, 54, 55, 58, 59}},
                        {'1', {36, 37, 52, 53}},
                        {'2', {32, 33, 34, 35, 52, 53, 54, 55, 56, 57}},
                        {'3', {34, 35, 36, 37, 52, 53, 54, 55, 56, 57}},
                        {'4', {34, 35, 36, 37, 52, 53, 56, 57, 58, 59}},
                        {'5', {34, 35, 36, 37, 54, 55, 56, 57, 58, 59}},
                        {'6', {32, 33, 34, 35, 36, 37, 56, 57, 58, 59}},
                        {'7', {36, 37, 52, 53, 54, 55}},
                        {'8', {32, 33, 34, 35, 36, 37, 52, 53, 54, 55, 56, 57, 58, 59}},
                        {'9', {36, 37, 52, 53, 54, 55, 56, 57, 58, 59}}
                    }
                },
                {3, {
                        {'0', {38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51}},
                        {'1', {42, 43, 46, 47}},
                        {'2', {38, 39, 40, 41, 44, 45, 46, 47, 48, 49}},
                        {'3', {40, 41, 42, 43, 44, 45, 46, 47, 48, 49}},
                        {'4', {40, 41, 42, 43, 44, 45, 46, 47, 50, 51}},
                        {'5', {40, 41, 42, 43, 44, 45, 48, 49, 50, 51}},
                        {'6', {38, 39, 40, 41, 42, 43, 44, 45, 50, 51}},
                        {'7', {42, 43, 46, 47, 48, 49}},
                        {'8', {38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51}},
                        {'9', {42, 43, 44, 45, 46, 47, 48, 49, 50, 51}}
                    }
                }
            };
           

            // Define the number of digits
            const int digitsCount = 4;

            // Get the current time
            auto time = id(homeassistant_time).now();
            int values[digitsCount] = {};
            values[0] = time.hour / 10;
            values[1] = time.hour % 10;
            values[2] = time.minute / 10;
            values[3] = time.minute % 10;

            // Set the LEDs according to the time
            for(int i = 0; i < digitsCount; i++){
              char digit = '0' + values[i];
              const std::vector<int>& leds_to_set = char_map.at(i).at(digit);
              for (int j = 0; j < leds_to_set.size(); j++){
                it[leds_to_set[j]] = Color::random_color();
              }
            }

